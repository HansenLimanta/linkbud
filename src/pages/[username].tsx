import Head from "next/head";
import { useRouter } from "next/router";
import { useEffect, useState } from "react";
import Background from "~/components/linkbudPage/Background";
import LinkButton from "~/components/linkbudPage/LinkButton";
import { LinkType } from "~/store/linksStore";
import { api } from "~/utils/api";
export default function Linkbud() {
  const router = useRouter();
  const [error, setError] = useState("");
  const userQuery = api.links.getLinksByUsername.useQuery({
    username: router.query.username as string,
  });
  const { data: userData } = userQuery;
  const [profilePicture, setProfilePicture] = useState("");
  useEffect(() => {
    if (userQuery.error?.data?.code) {
      setError(userQuery.error.message);
    }
  }, [userQuery.error?.data?.code]);
  useEffect(() => {
    if (userData?.user.image) {
      setProfilePicture(userData.user.image);
    }
  }, [userData?.user.image]);

  if (error !== "") {
    return (
      <>
        <Head>
          <title>Linkbud</title>
          <meta name="description" content="Generated by create-t3-app" />
          <link rel="icon" href="/favicon.svg" />
        </Head>
        <main className="min-h-screen w-full">{error}</main>
      </>
    );
  }

  if (userQuery.isLoading) {
    return (
      <>
        <Head>
          <title>Linkbud</title>
          <meta name="description" content="Generated by create-t3-app" />
          <link rel="icon" href="/favicon.svg" />
        </Head>
        <main className="min-h-screen w-full">Loading...</main>
      </>
    );
  }

  return (
    <>
      <Head>
        <title>{userData?.user.pageTitle}</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.svg" />
      </Head>
      <main className="min-h-screen w-full">
        <div className="flex flex-col items-center justify-start gap-2 px-8 py-20 text-white sm:mx-auto sm:w-96">
          <Background theme="black" image={profilePicture} />
          <img
            className="h-20 rounded-full"
            src={profilePicture}
            alt="profile picture"
            referrerPolicy="no-referrer"
          />
          <h1 className="text-xl font-semibold">{userData?.user.pageTitle}</h1>
          {userData?.user.description ? (
            <h2 className="text-center">{userData.user.description}</h2>
          ) : (
            <></>
          )}
          <div className="my-4 flex w-full flex-col gap-4">
            {userData?.links ? (
              userData.links.map((dbLink, index) => {
                if (dbLink.isActive === false) {
                  return <></>;
                } else if (dbLink.type === LinkType.Classic) {
                  return (
                    <LinkButton
                      key={dbLink.id}
                      theme={userData.theme?.buttonStyle || "DEFAULT"}
                      link={dbLink}
                    />
                  );
                } else if (dbLink.type === LinkType.Header) {
                  return (
                    <div
                      key={dbLink.id}
                      className={
                        index === 0
                          ? "w-full py-0 text-center"
                          : "w-full pb-0 pt-4 text-center"
                      }
                    >
                      <h1 className="text-1xl font-semibold">{dbLink.title}</h1>
                    </div>
                  );
                }
              })
            ) : (
              <></>
            )}
          </div>
        </div>
      </main>
    </>
  );
}
